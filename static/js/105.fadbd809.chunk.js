(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t){var o=function(t,o){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,o||"default");if("object"!=e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===o?String:Number)(t)}(t,"string");return"symbol"==e(o)?o:o+""}function o(e,o,r){return(o=t(o))in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),o.push.apply(o,r)}return o}importScripts("https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"),console.log("Worker: xlsx.full.min.js loaded");let n=[],a=[];const s=e=>{if(e instanceof Date&&!isNaN(e)){const t=String(e.getDate()).padStart(2,"0"),o=String(e.getMonth()+1).padStart(2,"0"),r=e.getFullYear();return"".concat(t,"/").concat(o,"/").concat(r)}if("string"===typeof e&&/^\d{4}-\d{2}-\d{2}/.test(e)){const[t,o,r]=e.split("-"),[n]=r.split("T")[0].split(" ");return"".concat(n,"/").concat(o,"/").concat(t)}return e},c=e=>(e||"").toString().replace(/\s+/g,"").toLowerCase();onmessage=function(e){console.log("Worker: Message received from main script");const{type:t,payload:i}=e.data;if("PROCESS_FILE"===t){const e=i;try{console.log("Worker: Starting XLSX.read"),console.log("Worker: Attempting to create Uint8Array");const t=new Uint8Array(e),c=XLSX.read(t,{type:"array"});console.log("Worker: Finished XLSX.read, starting sheet_to_json");const i=c.SheetNames[0];console.log("Worker: Sheet Name:",i);const l=c.Sheets[i];console.log("Worker: Worksheet is undefined?",void 0===l);const u=XLSX.utils.sheet_to_json(l,{cellDates:!0});console.log("Worker: Finished sheet_to_json, starting jsonData.forEach");const p=u.length,f=new Set(u.map(e=>e["Contract No."]).filter(Boolean)).size,g={},m={},d={},y=e=>(e||"").toString().replace(/\s+/g,"").toUpperCase();u.forEach(e=>{const t=e["Contract No."],o=e["Plate Number"],r=y(o),n=e["Revenue Date"],a=e["Pickup Odometer"]||"";if(!t||!r||!n)return;g[t]||(g[t]={}),g[t][r]||(g[t][r]=[]),g[t][r].push(n),m[t]||(m[t]={"Pick-up Date":e["Pick-up Date"]||"","Drop-off Date":e["Drop-off Date"]||"","Plate Number":o||"","Car Model":e["Car Model"]||"","Car Category":e["Car Category"]||"","Manufacture Year":e["Manufacture Year"]||"","Customer Name":e["Customer Name"]||"","Customer Phone":e["Customer Phone"]||""});const s=(e=>{let t=e;if("number"===typeof e){const o=Math.floor(e-25569);t=new Date(1e3*(86400*o));const r=Math.round(86400*(e-Math.floor(e))*1e3);t.setTime(t.getTime()+r)}else if("string"===typeof e){const o=new Date(e);if(isNaN(o))return e;t=o}if(t instanceof Date&&!isNaN(t)){const e=String(t.getDate()).padStart(2,"0"),o=String(t.getMonth()+1).padStart(2,"0"),r=String(t.getFullYear());return"".concat(e,"/").concat(o,"/").concat(r)}return e})(n);d[r]||(d[r]={}),d[r][s]={model:e["Car Model"]||"",category:e["Car Category"]||"",year:e["Manufacture Year"]||"",pickupOdometer:a}}),console.log("Worker: Finished jsonData.forEach, starting contractGroups processing");const S=[],h=[];Object.entries(g).forEach(e=>{let[t,n]=e,a=[];Object.entries(n).forEach(e=>{let[t,o]=e;o.forEach(e=>{let o=e;if("number"===typeof e)o=(e=>{const t=Math.floor(e-25569),o=new Date(86400*t*1e3),r=Math.round(86400*(e-Math.floor(e))*1e3);return o.setTime(o.getTime()+r),o})(e);else if("string"===typeof e){const t=new Date(e);isNaN(t)||(o=t)}a.push({plate:t,date:o})})}),a.sort((e,t)=>e.date-t.date);let c=[],i=null,l=null,u=null,p=null;a.forEach((e,t)=>{const{plate:o,date:r}=e;o!==i&&(null!==i&&c.push({plate:i,from:s(l),to:s(u),revenueDate:p}),l=r,p=e.date instanceof Date?e.date.toISOString():e.date),u=r,i=o,t===a.length-1&&c.push({plate:o,from:s(l),to:s(u),revenueDate:p})});const f=c.map(e=>{let t=d[e.plate]&&d[e.plate][e.from]||{};if(!t.pickupOdometer){const o=d[e.plate];if(o){t=o[Object.keys(o)[0]]}}return"".concat(e.plate," | ").concat(t.model||"-"," | ").concat(t.category||"-"," | ").concat(t.year||"-"," | Pickup Odometer: ").concat(t.pickupOdometer||"-"," (").concat(e.from," - ").concat(e.to,")")}),g=Array.from(new Set(c.map(e=>e.plate))),y=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({contract:t,cars:f,carsCount:g.length},m[t]);S.push(y),g.length>1&&h.push(y)}),console.log("Worker: Finished contractGroups processing, sending results");const C={totalRows:p,uniqueContracts:f,multiCarContracts:h.length};n=S,a=h,console.log("Worker: Sending FILE_PROCESSED message"),postMessage({type:"FILE_PROCESSED",payload:{allContractsResultRows:S,multiCarResultRows:h,stats:C}})}catch(l){console.error("Worker error:",l),postMessage({type:"ERROR",payload:l.message})}}else if("INITIALIZE_DATA"===t)n=i.allUniqueContracts,a=i.results,postMessage({type:"SEARCH_RESULTS",payload:a});else if("SEARCH_DATA"===t){const{searchTerm:e}=i,t=e.trim()?n:a;if(!e.trim())return void postMessage({type:"SEARCH_RESULTS",payload:t});const o=e.trim().toLowerCase(),r=c(o),s=t.filter(e=>!(!e.contract||!e.contract.toLowerCase().includes(o)&&!c(e.contract).includes(r))||(!(!e.cars||!e.cars.some(e=>e.toLowerCase().includes(o)||c(e).includes(r)))||(!(!e.carsCount||e.carsCount.toString()!==o)||!(!e["Customer Name"]||!e["Customer Name"].toLowerCase().includes(o)&&!c(e["Customer Name"]).includes(r)))));postMessage({type:"SEARCH_RESULTS",payload:s})}}})();
//# sourceMappingURL=105.fadbd809.chunk.js.map